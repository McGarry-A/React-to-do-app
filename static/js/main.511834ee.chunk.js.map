{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ToDoItem","props","className","name","id","index","onClick","func","App","useState","toDoList","setToDoList","toDoItem","setToDoItem","deleteHandler","storedList","splice","placeholder","value","onChange","event","target","newArray","push","map","el","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAuCA,IAAMA,EAAW,SAACC,GAChB,OACE,sBAAKC,UAAU,aAAf,UACE,4BAAID,EAAME,OACV,wBAAQC,GAAG,gBAAgBC,MAAOJ,EAAMI,MAAOC,QAAS,WAAKL,EAAMM,KAAKN,EAAMI,QAA9E,mBAKSG,EA3Cf,WACE,MAAgCC,mBAAS,CAAC,oBAAoB,2BAA9D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAUMC,EAAgB,SAAAT,GACpB,IAAIU,EAAU,YAAOL,GACrBK,EAAWC,OAAOX,EAAO,GACzBM,EAAYI,IAGd,OACE,sBAAKb,UAAU,YAAf,UACE,oBAAIA,UAAU,eAAd,wBACA,sBAAKA,UAAU,UAAf,UACE,uBAAOA,UAAU,QAAQe,YAAY,sBAAsBC,MAAQN,EAAWO,SAlB3D,SAAAC,GAAK,OAAIP,EAAYO,EAAMC,OAAOH,UAoBrD,wBAAQhB,UAAU,MAAMI,QAlBP,WACrB,IAAIgB,EAAQ,YAAOZ,GACnBY,EAASC,KAAKX,GACdD,EAAYW,IAeR,oBAGDZ,EAASc,KAAI,SAACC,EAAIpB,GACjB,OAAO,cAAC,EAAD,CAAUF,KAAMsB,EAAgBpB,MAAOA,EAAOE,KAAMO,GAA3BT,UCrBzBqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.511834ee.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport './images/add-button.svg'\n\nfunction App() {\n  const [toDoList, setToDoList] = useState([\"Do some coding...\",\"And then do some more!\"]);\n  const [toDoItem, setToDoItem] = useState(\"\");\n\n  const updateInputValue = event => setToDoItem(event.target.value);\n\n  const addCardHandler = () => {\n    let newArray = [...toDoList]\n    newArray.push(toDoItem)\n    setToDoList(newArray)\n  };\n\n  const deleteHandler = index => {\n    let storedList = [...toDoList]\n    storedList.splice(index, 1)\n    setToDoList(storedList)\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"main-heading\">To Do List</h1>\n      <div className=\"addToDo\">\n        <input className=\"input\" placeholder=\"Add to do list item\" value={ toDoItem } onChange={ updateInputValue }></input>\n        {/* <img src=\"./images/plus.png\" alt=\"add\"></img> */}\n        <button className=\"cta\" onClick={addCardHandler}>Add</button>\n      </div>\n      \n      {toDoList.map((el, index) => {\n        return <ToDoItem name={el} key={index} index={index} func={deleteHandler}/>;\n      })}\n    </div>\n  );\n}\n\nconst ToDoItem = (props) => {\n  return (\n    <div className=\"to-do-item\">\n      <p>{props.name}</p>\n      <button id=\"delete-button\" index={props.index} onClick={()=>{props.func(props.index)}}>X</button>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}